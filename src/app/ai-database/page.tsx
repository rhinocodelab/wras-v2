
'use client';

import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import {
  Table,
  TableHeader,
  TableRow,
  TableHead,
  TableBody,
  TableCell,
} from '@/components/ui/table';
import { getTranslations, FullTranslationInfo } from '@/app/actions';
import { useToast } from '@/hooks/use-toast';
import { Loader2 } from 'lucide-react';

const LANGUAGE_MAP: { [key: string]: string } = {
  'en-IN': 'English (India)',
  'mr-IN': 'Marathi (India)',
  'hi-IN': 'Hindi (India)',
  'gu-IN': 'Gujarati (India)',
};

export default function AiDatabasePage() {
  const [translations, setTranslations] = useState<FullTranslationInfo[]>([]);
  const [isLoading, setIsLoading] = useState(false);
  const [hasFetched, setHasFetched] = useState(false);
  const { toast } = useToast();

  const handleFetchTranslations = async () => {
    setIsLoading(true);
    setHasFetched(true);
    try {
      const data = await getTranslations();
      setTranslations(data);
      if (data.length === 0) {
        toast({
          title: 'No Data',
          description: 'No translations found in the database.',
        });
      }
    } catch (error) {
      toast({
        variant: 'destructive',
        title: 'Error',
        description: 'Failed to fetch translations.',
      });
      console.error('Failed to fetch translations:', error);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="w-full">
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-lg font-semibold md:text-2xl">AI Database</h1>
          <p className="text-muted-foreground">
            Explore and manage AI-generated data assets.
          </p>
        </div>
      </div>

      <div className="mt-4 grid gap-6 md:grid-cols-2 lg:grid-cols-3">
        <Card>
          <CardHeader>
            <CardTitle>AI Generated Text Translation</CardTitle>
            <CardDescription>
              View multilingual translations of train route data generated by AI.
            </CardDescription>
          </CardHeader>
          <CardContent>
            <Button onClick={handleFetchTranslations} disabled={isLoading}>
              {isLoading && <Loader2 className="mr-2 h-4 w-4 animate-spin" />}
              {isLoading ? 'Loading...' : 'View Translations'}
            </Button>
          </CardContent>
        </Card>
      </div>

      {hasFetched && (
        <div className="mt-6">
          {isLoading ? (
             <div className="flex justify-center items-center h-32">
                <Loader2 className="h-8 w-8 animate-spin text-primary" />
             </div>
          ) : translations.length > 0 ? (
            <Card>
                <CardHeader>
                    <CardTitle>Route Translations</CardTitle>
                    <CardDescription>Displaying translated text for all train routes.</CardDescription>
                </CardHeader>
                <CardContent>
                    <div className="space-y-4">
                    {translations.map((item) => (
                        <div key={item.train_number} className="rounded-md border">
                        <div className="bg-muted p-3">
                            <h3 className="font-semibold">{item.train_name} ({item.train_number})</h3>
                        </div>
                        <Table>
                            <TableHeader>
                            <TableRow>
                                <TableHead className="w-[150px]">Language</TableHead>
                                <TableHead>Train Number</TableHead>
                                <TableHead>Train Name</TableHead>
                                <TableHead>Start Station</TableHead>
                                <TableHead>End Station</TableHead>
                            </TableRow>
                            </TableHeader>
                            <TableBody>
                            {item.translations.map((t) => (
                                <TableRow key={t.language_code}>
                                <TableCell className="font-medium">{LANGUAGE_MAP[t.language_code] || t.language_code}</TableCell>
                                <TableCell>{t.train_number_translation}</TableCell>
                                <TableCell>{t.train_name_translation}</TableCell>
                                <TableCell>{t.start_station_translation}</TableCell>
                                <TableCell>{t.end_station_translation}</TableCell>
                                </TableRow>
                            ))}
                            </TableBody>
                        </Table>
                        </div>
                    ))}
                    </div>
                </CardContent>
            </Card>
          ) : (
            <div className="mt-6 text-center text-muted-foreground">
              <p>No translation data to display. Please generate translations from the Route Management page.</p>
            </div>
          )}
        </div>
      )}
    </div>
  );
}
